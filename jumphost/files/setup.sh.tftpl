#!/bin/bash

# Add MongoDB repository
wget -qO- https://www.mongodb.org/static/pgp/server-8.0.asc | sudo tee /etc/apt/trusted.gpg.d/server-8.0.asc
echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu noble/mongodb-org/8.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-8.0.list

# Install required packages
sudo apt update -y
sudo apt install xfce4 xfce4-goodies gnupg chromium-browser git docker-compose xrdp mongodb-atlas -y

# Install MongoDB Compass
COMPASS_URL=$(curl -s https://api.github.com/repos/mongodb-js/compass/releases/latest | jq -r '.assets[] | select(.name | test("^mongodb-compass_\\d+.\\d+.\\d+_amd64.deb$")) | .browser_download_url')
COMPASS_FILE=$(basename "$COMPASS_URL")

wget $COMPASS_URL
sudo apt install ./$COMPASS_FILE

# Add vscodium repository
sudo wget https://gitlab.com/paulcarroty/vscodium-deb-rpm-repo/raw/master/pub.gpg \
-O /usr/share/keyrings/vscodium-archive-keyring.asc
echo 'deb [ arch=amd64,arm64 signed-by=/usr/share/keyrings/vscodium-archive-keyring.asc ] https://paulcarroty.gitlab.io/vscodium-deb-rpm-repo/debs vscodium main' \
    | sudo tee /etc/apt/sources.list.d/vscodium.list

# Install vscodium
sudo apt update -y
sudo apt install codium -y

# Install Certbot
snap install --classic certbot

#######################
## Install Guacamole ##
#######################

# Get docker-compose for guacamole
git clone "https://github.com/boschkundendienst/guacamole-docker-compose.git"
cd guacamole-docker-compose
./prepare.sh

# Install branding.jar
mkdir -p guacamole_home/extensions
wget -O guacamole_home/extensions/branding.jar ${branding_jar_url}
sed -i '/\s\sguacamole\:/,/volumes\:/ { /volumes\:/a\      - ./guacamole_home:/guacamole_home:rw 
}' docker-compose.yml 
sed -i '/\s\sguacamole\:/,/environment\:/ { /environment\:/a\      GUACAMOLE_HOME: /guacamole_home
}' docker-compose.yml

# Generate salted hash for user password
SALT="$(openssl rand -hex 32 | tr '[:lower:]' '[:upper:]')"
PASS='${password}'
HASH="$(echo -en "$PASS$SALT" | sha256sum | sed 's/ .*$//')"

# Overwrite default guacadmin password
sed -i "s/acaccc756729f279abb373a57c11bfba0febc47030cf2f123a7aaba3e900a575/deadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef/" init/initdb.sql

# Add user and connection details to Postgres init script
cat >> init/initdb.sql <<EOF
INSERT INTO guacamole_connection (connection_id, connection_name, protocol, failover_only) VALUES (1, 'Jumphost RDP', 'rdp', 'f');
INSERT INTO guacamole_connection_parameter (connection_id, parameter_name, parameter_value) VALUES (1, 'password', '$PASS');
INSERT INTO guacamole_connection_parameter (connection_id, parameter_name, parameter_value) VALUES (1, 'hostname', '172.18.0.1');
INSERT INTO guacamole_connection_parameter (connection_id, parameter_name, parameter_value) VALUES (1, 'username', 'ubuntu');
INSERT INTO guacamole_entity (entity_id, name, type) VALUES (2, '${username}', 'USER');
INSERT INTO guacamole_user (user_id, entity_id, password_hash, password_salt, password_date) VALUES (2, 2, decode('$HASH', 'hex'), decode('$SALT', 'hex'), '$(date +"%Y-%m-%d %T.%3N%3z")');
INSERT INTO guacamole_connection_permission (entity_id, connection_id, permission) VALUES (1, 1, 'READ');
INSERT INTO guacamole_connection_permission (entity_id, connection_id, permission) VALUES (1, 1, 'UPDATE');
INSERT INTO guacamole_connection_permission (entity_id, connection_id, permission) VALUES (1, 1, 'DELETE');
INSERT INTO guacamole_connection_permission (entity_id, connection_id, permission) VALUES (1, 1, 'ADMINISTER');
INSERT INTO guacamole_connection_permission (entity_id, connection_id, permission) VALUES (2, 1, 'READ');
EOF

# Change Guacamole NGINX to port 443
sed -i "s/8443:/443:/" docker-compose.yml

# Retrieve Let's Encrypt cert
for i in {1..5}; do certbot certonly --standalone --preferred-challenges http-01 -d ${hostname}.${domain} ${certbot_staging}--non-interactive --agree-tos -m webmaster@${domain} && break || sleep 15; done 

cp /etc/letsencrypt/live/${hostname}.${domain}/privkey.pem /guacamole-docker-compose/nginx/ssl/self-ssl.key
cp /etc/letsencrypt/live/${hostname}.${domain}/fullchain.pem /guacamole-docker-compose/nginx/ssl/self.cert

# Start Guacamole
docker-compose up -d

#####################################
## Desktop Setup and Optimizations ##
#####################################

# Enable XFCE
sudo update-alternatives --set x-session-manager /usr/bin/startxfce4

# Disable session save on exit
sed -i '/<property name="LockCommand" type="string" value=""\//a\    <property name="SaveOnExit" type="bool" value="false"\/>' /etc/xdg/xfce4/xfconf/xfce-perchannel-xml/xfce4-session.xml

# Set desktop background to blank (bandwidth saving)
cat > /etc/xdg/xfce4/xfconf/xfce-perchannel-xml/xfce4-desktop.xml <<EOF
<?xml version="1.0" encoding="UTF-8"?> 
<channel name="xfce4-desktop" version="1.0">
  <property name="backdrop" type="empty">
    <property name="screen0" type="empty">
      <property name="monitorrdp0" type="empty">
        <property name="workspace0" type="empty">
          <property name="image-style" type="int" value="0"/>
        </property>  
        <property name="workspace1" type="empty">
          <property name="image-style" type="int" value="0"/>
        </property>  
        <property name="workspace2" type="empty">
          <property name="image-style" type="int" value="0"/>
        </property>  
        <property name="workspace3" type="empty">
          <property name="image-style" type="int" value="0"/>
        </property>  
      </property>  
    </property>
  </property>
</channel>
EOF

# Hide window contents on move and resize (bandwidth saving)
cat > /etc/xdg/xfce4/xfconf/xfce-perchannel-xml/xfwm4.xml <<EOF
<?xml version="1.0" encoding="UTF-8"?> 
<channel name="xfwm4" version="1.0">
  <property name="general" type="empty">
    <property name="box_move" type="bool" value="true"/>
    <property name="box_resize" type="bool" value="true"/>
  </property>
</channel>
EOF

# Create keyring with null password to suppress prompts
mkdir -p /home/ubuntu/.local/share/keyrings/
echo -n "Default_keyring" > /home/ubuntu/.local/share/keyrings/default
cat > /home/ubuntu/.local/share/keyrings/Default_keyring.keyring << EOF 
[keyring]
display-name=Default keyring
ctime=0
mtime=0
lock-on-idle=false
lock-after=false
EOF
chmod og= /home/ubuntu/.local/share/keyrings/
chmod og= /home/ubuntu/.local/share/keyrings/Default_keyring.keyring
chown -R ubuntu:ubuntu /home/ubuntu/.local

# Pre-populate desktop with chromium and MongoDB Compass icons
mkdir -p -m 0755 /home/ubuntu/Desktop
chown ubuntu:ubuntu /home/ubuntu/Desktop

cat > /usr/share/applications/MongoDB\ Compass.desktop <<EOF
[Desktop Entry]
Version=1.0
Type=Application
Name=MongoDB Compass
Comment=The MongoDB GUI
Exec=mongodb-compass %U
Icon=mongodb-compass
Path=
Terminal=false
StartupNotify=true"
EOF

cat > /usr/share/applications/Lab\ Guide.desktop <<EOF
[Desktop Entry]
Version=1.0
Type=Link
Name=Lab Guide
Comment=
Icon=user-bookmarks
URL=${lab_guide_url}
EOF

cat > /home/ubuntu/Desktop/Atlas\ Connection\ String.txt <<EOF
Atlas Connection String:
mongodb+srv://${username}:${urlencoded_pw}@${atlas_hostname}
EOF

ln -s "/usr/share/applications/MongoDB Compass.desktop" "/home/ubuntu/Desktop/MongoDB Compass.desktop"
ln -s "/usr/share/applications/Lab Guide.desktop" "/home/ubuntu/Desktop/Lab Guide.desktop"
ln -s "/usr/share/applications/chromium-browser.desktop" "/home/ubuntu/Desktop/chromium-browser.desktop"
ln -s "/usr/share/applications/codium.desktop" "/home/ubuntu/Desktop/codium.desktop"

# Set user password
echo "ubuntu:$PASS" | tee /tmp/password_change | sudo chpasswd
